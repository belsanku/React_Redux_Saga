{"ast":null,"code":"import { articleActionTypes } from \"./actionTypes\";\nimport { articles } from \"../../mockedData\";\nconst initialState = [];\nexport const articleReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case articleActionTypes.CREATE_NEW_ARTICLE:\n      return [...state, { ...action.article,\n        id: Date.now(),\n        // (＠＾◡＾)\n        createdAt: new Date(),\n        user: action.username\n      }];\n\n    case articleActionTypes.FETCH_ARTICLES:\n      return articles;\n\n    case articleActionTypes.ARTICLE_EDIT:\n      return state.map(articleItem => {\n        if (articleItem.id === action.article.id) {\n          return {};\n        }\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["F:/noveo/my-react-app/src/ducks/article/reducer.js"],"names":["articleActionTypes","articles","initialState","articleReducer","state","action","type","CREATE_NEW_ARTICLE","article","id","Date","now","createdAt","user","username","FETCH_ARTICLES","ARTICLE_EDIT","map","articleItem"],"mappings":"AAAA,SAAQA,kBAAR,QAAiC,eAAjC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,kBAAkB,CAACO,kBAAxB;AACI,aAAO,CACH,GAAGH,KADA,EAEH,EACI,GAAGC,MAAM,CAACG,OADd;AAEIC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFR;AAEoB;AAChBC,QAAAA,SAAS,EAAE,IAAIF,IAAJ,EAHf;AAIIG,QAAAA,IAAI,EAAER,MAAM,CAACS;AAJjB,OAFG,CAAP;;AASJ,SAAKd,kBAAkB,CAACe,cAAxB;AACI,aAAOd,QAAP;;AAEJ,SAAKD,kBAAkB,CAACgB,YAAxB;AACI,aAAOZ,KAAK,CAACa,GAAN,CAAUC,WAAW,IAAI;AAC5B,YAAGA,WAAW,CAACT,EAAZ,KAAmBJ,MAAM,CAACG,OAAP,CAAeC,EAArC,EAAyC;AACrC,iBAAO,EAAP;AAGH;AACJ,OANM,CAAP;;AAOJ;AACI,aAAOL,KAAP;AAvBR;AAyBH,CA1BM","sourcesContent":["import {articleActionTypes} from \"./actionTypes\";\r\nimport {articles} from \"../../mockedData\";\r\n\r\nconst initialState = [];\r\n\r\nexport const articleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case articleActionTypes.CREATE_NEW_ARTICLE:\r\n            return [\r\n                ...state,\r\n                {\r\n                    ...action.article,\r\n                    id: Date.now(), // (＠＾◡＾)\r\n                    createdAt: new Date(),\r\n                    user: action.username\r\n                },\r\n            ];\r\n        case articleActionTypes.FETCH_ARTICLES:\r\n            return articles;\r\n\r\n        case articleActionTypes.ARTICLE_EDIT:\r\n            return state.map(articleItem => {\r\n                if(articleItem.id === action.article.id) {\r\n                    return {\r\n\r\n                    }\r\n                }\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}