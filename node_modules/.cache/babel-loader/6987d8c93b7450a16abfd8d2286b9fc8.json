{"ast":null,"code":"import { loginErrorAction, loginRequestAction, loginSuccessAction, registerErrorAction, registerRequestAction, registerSuccessAction } from \"./actions\";\nimport { put, all, takeLatest, call } from 'redux-saga/effects';\nimport { actionTypes } from \"./actionTypes\";\nimport { login, register } from \"../../services/requests\";\nexport function* loginSaga(credentials) {\n  try {\n    yield put(loginRequestAction());\n    const response = yield call(login, credentials);\n    yield put(loginSuccessAction(response.data));\n  } catch (error) {\n    yield put(loginErrorAction(error));\n  }\n}\nexport function* registrationSaga(credentials) {\n  console.log(credentials.user);\n\n  try {\n    yield put(registerRequestAction(credentials));\n    const response = yield call(register, credentials);\n    yield put(registerSuccessAction(response.data));\n  } catch (error) {\n    yield put(registerErrorAction(error));\n  }\n}\nexport default function* appSagaWatcher() {\n  yield all([takeLatest(actionTypes.LOGIN, loginSaga), takeLatest(actionTypes.REGISTRATION, registrationSaga)]);\n}","map":{"version":3,"sources":["F:/noveo/my-react-app/src/ducks/app/sagas.js"],"names":["loginErrorAction","loginRequestAction","loginSuccessAction","registerErrorAction","registerRequestAction","registerSuccessAction","put","all","takeLatest","call","actionTypes","login","register","loginSaga","credentials","response","data","error","registrationSaga","console","log","user","appSagaWatcher","LOGIN","REGISTRATION"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,EAIIC,mBAJJ,EAKIC,qBALJ,EAK2BC,qBAL3B,QAMO,WANP;AAOA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,UAAlB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,yBAA9B;AAEA,OAAO,UAAUC,SAAV,CAAoBC,WAApB,EAAiC;AACpC,MAAI;AACA,UAAMR,GAAG,CAACL,kBAAkB,EAAnB,CAAT;AACA,UAAMc,QAAQ,GAAG,MAAMN,IAAI,CAACE,KAAD,EAAQG,WAAR,CAA3B;AACA,UAAMR,GAAG,CAACJ,kBAAkB,CAACa,QAAQ,CAACC,IAAV,CAAnB,CAAT;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMX,GAAG,CAACN,gBAAgB,CAACiB,KAAD,CAAjB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,CAA2BJ,WAA3B,EAAwC;AAC3CK,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACO,IAAxB;;AACA,MAAI;AACA,UAAMf,GAAG,CAACF,qBAAqB,CAACU,WAAD,CAAtB,CAAT;AACA,UAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACG,QAAD,EAAWE,WAAX,CAA3B;AACA,UAAMR,GAAG,CAACD,qBAAqB,CAACU,QAAQ,CAACC,IAAV,CAAtB,CAAT;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMX,GAAG,CAACH,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACH;AACJ;AAED,eAAe,UAAUK,cAAV,GAA2B;AACtC,QAAMf,GAAG,CAAC,CACPC,UAAU,CAACE,WAAW,CAACa,KAAb,EAAoBV,SAApB,CADH,EAENL,UAAU,CAACE,WAAW,CAACc,YAAb,EAA2BN,gBAA3B,CAFJ,CAAD,CAAT;AAIH","sourcesContent":["import {\r\n    loginErrorAction,\r\n    loginRequestAction,\r\n    loginSuccessAction,\r\n    registerErrorAction,\r\n    registerRequestAction, registerSuccessAction\r\n} from \"./actions\";\r\nimport {put, all, takeLatest, call} from 'redux-saga/effects'\r\nimport {actionTypes} from \"./actionTypes\";\r\nimport {login, register} from \"../../services/requests\";\r\n\r\nexport function* loginSaga(credentials) {\r\n    try {\r\n        yield put(loginRequestAction());\r\n        const response = yield call(login, credentials);\r\n        yield put(loginSuccessAction(response.data));\r\n    } catch (error) {\r\n        yield put(loginErrorAction(error));\r\n    }\r\n}\r\n\r\nexport function* registrationSaga(credentials) {\r\n    console.log(credentials.user)\r\n    try {\r\n        yield put(registerRequestAction(credentials));\r\n        const response = yield call(register, credentials);\r\n        yield put(registerSuccessAction(response.data));\r\n    } catch (error) {\r\n        yield put(registerErrorAction(error));\r\n    }\r\n}\r\n\r\nexport default function* appSagaWatcher() {\r\n    yield all([\r\n       takeLatest(actionTypes.LOGIN, loginSaga),\r\n        takeLatest(actionTypes.REGISTRATION, registrationSaga),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}