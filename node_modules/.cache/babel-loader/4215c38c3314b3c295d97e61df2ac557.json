{"ast":null,"code":"var _jsxFileName = \"F:\\\\noveo\\\\my-react-app\\\\src\\\\containers\\\\FeedContainer.jsx\";\nimport FeedComponent from \"../components/FeedComponent\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { articles } from \"../mockedData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedContainer() {\n  const fetchArticles = () => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(articles);\n      }, 1000);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FeedComponent, {\n    articles: article\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n}\n\n_c = FeedContainer;\nFeedContainer.propTypes = {\n  fetchArticles: PropTypes.func\n};\nexport default FeedContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedContainer\");","map":{"version":3,"sources":["F:/noveo/my-react-app/src/containers/FeedContainer.jsx"],"names":["FeedComponent","React","useEffect","useState","PropTypes","articles","FeedContainer","fetchArticles","Promise","resolve","setTimeout","article","propTypes","func"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,6BAA1B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;;AAEA,SAASC,aAAT,GAAyB;AACrB,QAAMC,aAAa,GAAG,MAAM;AACxB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5BC,MAAAA,UAAU,CAAC,MAAM;AACbD,QAAAA,OAAO,CAACJ,QAAD,CAAP;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAJM,CAAP;AAKH,GAND;;AAQA,sBAAO,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEM;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAVQL,a;AAYTA,aAAa,CAACM,SAAd,GAA0B;AACxBL,EAAAA,aAAa,EAAEH,SAAS,CAACS;AADD,CAA1B;AAIA,eAAeP,aAAf","sourcesContent":["import FeedComponent from \"../components/FeedComponent\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {articles} from \"../mockedData\";\r\n\r\nfunction FeedContainer() {\r\n    const fetchArticles = () => {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(articles);\r\n            }, 1000);\r\n        });\r\n    };\r\n\r\n    return <FeedComponent articles={article}/>\r\n}\r\n\r\nFeedContainer.propTypes = {\r\n  fetchArticles: PropTypes.func\r\n};\r\n\r\nexport default FeedContainer;"]},"metadata":{},"sourceType":"module"}