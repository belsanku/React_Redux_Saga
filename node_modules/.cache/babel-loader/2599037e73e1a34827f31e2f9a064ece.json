{"ast":null,"code":"var _jsxFileName = \"F:\\\\noveo\\\\my-react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport NavBarComponent from \"./components/NavBarComponent\";\nimport ArticleOverviewFuncComponent from \"./components/Articles/ArticleOverviewFuncComponent\";\nimport LoginComponent from \"./components/LoginComponent\";\nimport FeedContainer from \"./containers/FeedContainer\";\nimport AuthLayoutComponent from \"./layouts/AuthLayoutComponent\";\nimport CommonLayoutComponent from \"./layouts/CommonLayoutComponent\";\nimport { history, store } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchUser = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        username: 'Sasha'\n      });\n    }, 5000);\n  });\n};\n\nconst article = {\n  title: 'Best title',\n  author: 'Sasha',\n  content: 'Hello very well',\n  createdAt: '05.11.2022',\n  imageUrl: 'https://library.kissclipart.com/20181123/eaq/kissclipart-dancing-frogs-clipart-toad-true-frog-clip-art-632d544f5fa39535.jpg'\n};\n\nconst login = _ref => {\n  let {\n    username,\n    password\n  } = _ref;\n  alert(`I'm ${username} with ${password}`);\n}; //const NotificationHOCcomponent = WithOkButton(NotificationComponent);\n\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = React.useState(null);\n  const isAuthenticated = store.getState().app.isLoggedIn;\n  useEffect(() => {\n    async function fetchData() {\n      const fetchedUser = await fetchUser();\n      setUser(fetchedUser);\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(ConnectedRouter, {\n      history: history,\n      children: [/*#__PURE__*/_jsxDEV(NavBarComponent, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(AuthLayoutComponent, {\n          exact: true,\n          path: \"/login\",\n          component: LoginComponent,\n          isAuthenticated: isAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CommonLayoutComponent, {\n          exact: true,\n          path: \"/feed\",\n          component: FeedContainer,\n          isAuthenticated: isAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CommonLayoutComponent, {\n          exact: true,\n          path: \"/article/:id\",\n          component: ArticleOverviewFuncComponent,\n          isAuthenticated: isAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/noveo/my-react-app/src/App.js"],"names":["React","useEffect","BrowserRouter","Route","Switch","Redirect","NavBarComponent","ArticleOverviewFuncComponent","LoginComponent","FeedContainer","AuthLayoutComponent","CommonLayoutComponent","history","store","Provider","ConnectedRouter","fetchUser","Promise","resolve","setTimeout","username","article","title","author","content","createdAt","imageUrl","login","password","alert","App","user","setUser","useState","isAuthenticated","getState","app","isLoggedIn","fetchData","fetchedUser"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useEffect} from \"react\";\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport NavBarComponent from \"./components/NavBarComponent\";\nimport ArticleOverviewFuncComponent from \"./components/Articles/ArticleOverviewFuncComponent\";\nimport LoginComponent from \"./components/LoginComponent\";\nimport FeedContainer from \"./containers/FeedContainer\"\nimport AuthLayoutComponent from \"./layouts/AuthLayoutComponent\";\nimport CommonLayoutComponent from \"./layouts/CommonLayoutComponent\";\nimport {history, store} from \"./store\";\nimport {Provider} from \"react-redux\";\nimport {ConnectedRouter} from \"connected-react-router\";\n\nconst fetchUser = () => {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve({\n                username: 'Sasha'\n            });\n        }, 5000);\n    });\n};\n\nconst article = {\n    title: 'Best title',\n    author: 'Sasha',\n    content: 'Hello very well',\n    createdAt: '05.11.2022',\n    imageUrl: 'https://library.kissclipart.com/20181123/eaq/kissclipart-dancing-frogs-clipart-toad-true-frog-clip-art-632d544f5fa39535.jpg'\n}\n\nconst login = ({ username, password }) => {\n    alert(`I'm ${username} with ${password}`);\n};\n\n\n\n//const NotificationHOCcomponent = WithOkButton(NotificationComponent);\n\nfunction App() {\n     const [user, setUser] = React.useState(null);\n     const isAuthenticated = store.getState().app.isLoggedIn;\n\n     useEffect(() => {\n         async function fetchData() {\n             const fetchedUser = await fetchUser();\n             setUser(fetchedUser);\n         }\n         fetchData();\n    }, []);\n\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <NavBarComponent user={user}/>\n                <Switch>\n                    <AuthLayoutComponent\n                        exact\n                        path='/login'\n                        component={LoginComponent}\n                        isAuthenticated={isAuthenticated}\n                    />\n                    <CommonLayoutComponent\n                        exact\n                        path='/feed'\n                        component={FeedContainer}\n                        isAuthenticated={isAuthenticated}\n                    />\n                    <CommonLayoutComponent\n                        exact\n                        path='/article/:id'\n                        component={ArticleOverviewFuncComponent}\n                        isAuthenticated={isAuthenticated}\n                    />\n                </Switch>\n            </ConnectedRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}